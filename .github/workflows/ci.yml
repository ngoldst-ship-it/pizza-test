name: CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

permissions:
  contents: read
  pull-requests: read
  id-token: write

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: JFrog Fly - Setup npm registry
        uses: jfrog/fly-action@v1
        with:
          url: https://mlopsruntime.jfrog.io

      - name: Install dependencies
        run: npm install

      - name: Build application
        run: npm run build

      - name: Run tests
        run: npm test

      - name: Check build output
        run: |
          echo "## ðŸ“¦ Build Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          ls -lh dist/ >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          du -sh dist/ >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

  docker-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: JFrog Fly - Setup Docker registry
        uses: jfrog/fly-action@v1
        id: fly
        with:
          url: https://mlopsruntime.jfrog.io

      - name: Log in to JFrog Fly Docker Registry
        uses: docker/login-action@v3
        with:
          registry: mlopsruntime.jfrog.io
          username: ${{ steps.fly.outputs.username }}
          password: ${{ steps.fly.outputs.token }}

      - name: Build and push Docker image to Fly
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            mlopsruntime.jfrog.io/docker-local/pizza-backend:latest
            mlopsruntime.jfrog.io/docker-local/pizza-backend:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker image
        if: github.event_name != 'push'
        run: |
          docker build -t pizza-backend-test .
          docker run -d --name test-container -p 3001:3001 pizza-backend-test
          sleep 5
          curl -f http://localhost:3001/health || exit 1
          docker stop test-container
          docker rm test-container
          echo "âœ… Docker health check passed" >> $GITHUB_STEP_SUMMARY

  publish-npm:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    needs: lint-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: JFrog Fly - Setup npm registry
        uses: jfrog/fly-action@v1
        with:
          url: https://mlopsruntime.jfrog.io

      - name: Install dependencies
        run: npm install

      - name: Build application
        run: npm run build

      - name: Publish to JFrog Fly npm registry
        run: |
          npm publish
          echo "âœ… Published to JFrog Fly" >> $GITHUB_STEP_SUMMARY 